@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<h3>Login</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p style="color:red">@ErrorMessage</p>
}

<input @bind="Email" placeholder="Email" />
<input @bind="Password" type="password" placeholder="Password" />
<button @onclick="LoginUser">Login</button>

@code {
    private string Email;
    private string Password;
    private string ErrorMessage;

    private async Task LoginUser()
    {
        var loginRequest = new { Email, Password };
        var response = await Http.PostAsJsonAsync("api/auth/login", loginRequest);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
            // Store JWT token securely in Local Storage
            await LocalStorage.SetItemAsync("authToken", result.Token);
            Navigation.NavigateTo("/");
        }
        else
        {
            ErrorMessage = "Invalid credentials";
        }
    }

    private class LoginResponse
    {
        public string Token { get; set; }
    }
}
